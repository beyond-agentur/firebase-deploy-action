name: 'Firebase Build & Deploy'
description: 'Firebase Build & Deploy'
inputs:
  FIREBASE_SERVICE_ACCOUNT:  # id of input
    description: 'Firebase service account'
    required: true
    default: ''
  FIREBASE_PROJECT_ID:  # id of input
    description: 'Firebase projectId'
    required: true
    default: ''
runs:
  using: "composite"
  steps:
    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: 'latest'
        extended: true
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Set Registries
      run: |
        npm config set "@fortawesome:registry" https://npm.fontawesome.com
        npm config set "//npm.fontawesome.com/:_authToken" ${{ secrets.FORTAWESOME_NPM_REGISTRY }}
        npm config set "@gfzm:registry" https://npm.gfzm.de/registry/
        npm config set "//npm.gfzm.de/registry/:_authToken" {{ secrets.GFZM_NPM_REGISTRY }}
        npm config set "@beyond-agentur:registry" https://npm.beyond-agentur.com/registry/
        npm config set "//npm.beyond-agentur.com/registry/:_authToken" {{ secrets.BEYOND_AGENTUR_NPM_REGISTRY }}

    - name: Install Dependencies
      run: npm install

    - name: Install theme base Dependencies
      working-directory: themes/base
      run: npm install

    - name: Install theme dsb Dependencies
      working-directory: themes/dsb
      run: npm install

    - name: Build
      run: HUGO_ENV=production hugo --minify

    - name: Minfiy stuff
      run: npm run build

    - name: Deploy to firebase
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ inputs.FIREBASE_SERVICE_ACCOUNT }}'
        channelId: live
        projectId: ${{ inputs.FIREBASE_PROJECT_ID }}
      env:
        FIREBASE_CLI_PREVIEWS: hostingchannels
